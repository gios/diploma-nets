{"version":3,"file":"middlewares.js","sourceRoot":"","sources":["../../nets/middlewares.ts"],"names":[],"mappings":"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","sourcesContent":["import { Context } from 'koa';\r\n\r\nimport { NetService } from './service';\r\n\r\nconst netService = new NetService();\r\n\r\nexport async function getNetTransitions(ctx: Context) {\r\n  ctx.body = await netService.getNetTransitions(ctx);\r\n}\r\n\r\nexport async function getNetPinnacles(ctx: Context) {\r\n  ctx.body = await netService.getNetPinnacles(ctx);\r\n}\r\n\r\nexport async function getNetConnections(ctx: Context) {\r\n  ctx.body = await netService.getNetConnections(ctx);\r\n}\r\n\r\nexport async function getNet(ctx: Context) {\r\n  ctx.body = await netService.getNetAttributes(ctx);\r\n}\r\n\r\nexport async function putNetTransition(ctx: Context) {\r\n  ctx.body = await netService.putNetTransition(ctx);\r\n}\r\n\r\nexport async function putNetPinnacle(ctx: Context) {\r\n  ctx.body = await netService.putNetPinnacle(ctx);\r\n}\r\n\r\nexport async function putNetConnection(ctx: Context) {\r\n  ctx.body = await netService.putNetConnection(ctx);\r\n}\r\n\r\nexport async function postNetTransition(ctx: Context) {\r\n  ctx.body = await netService.postNetTransition(ctx);\r\n}\r\n\r\nexport async function postNetPinnacle(ctx: Context) {\r\n  ctx.body = await netService.postNetPinnacle(ctx);\r\n}\r\n\r\nexport async function postNetConnection(ctx: Context) {\r\n  ctx.body = await netService.postNetConnection(ctx);\r\n}\r\n\r\nexport async function deleteNetTransition(ctx: Context) {\r\n  ctx.body = await netService.deleteNetTransition(ctx);\r\n}\r\n\r\nexport async function deleteNetPinnacle(ctx: Context) {\r\n  ctx.body = await netService.deleteNetPinnacle(ctx);\r\n}\r\n\r\nexport async function deleteNetConnection(ctx: Context) {\r\n  ctx.body = await netService.deleteNetConnection(ctx);\r\n}\r\n\r\nexport async function startHistory(ctx: Context) {\r\n  ctx.body = await netService.startHistory(ctx);\r\n}\r\n\r\nexport async function postHistory(ctx: Context) {\r\n  ctx.body = await netService.postHistory(ctx);\r\n}\r\n\r\nexport async function getHistory(ctx: Context) {\r\n  ctx.body = await netService.getHistory(ctx);\r\n}\r\n\r\nexport async function getHistorySessions(ctx: Context) {\r\n  ctx.body = await netService.getHistorySessions(ctx);\r\n}\r\n\r\nexport async function deleteHistory(ctx: Context) {\r\n  ctx.body = await netService.deleteHistory(ctx);\r\n}\r\n"]}